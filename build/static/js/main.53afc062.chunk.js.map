{"version":3,"sources":["views/Home/Home.js","views/NoMatch/NoMatch.js","views/Classes/Classes.js","views/CreateClass/CreateClass.js","views/MyAccount/MyAccount.js","components/NavBar/NavBar.js","serviceWorker.js","index.js","routes.js"],"names":["Home","props","react_default","a","createElement","Jumbotron_default","className","NoMatch","Classes","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classListing","_this2","fetch","then","response","json","data","setState","classListData","map","index","instructor","name","price","Component","CreateClass","id","method","action","type","required","value","href","MyAccount","IsReadOnly","imageIsReadOnly","handleSubmit","bind","assertThisInitialized","handleChange","handleEditClick","event","target","alert","preventDefault","onSubmit","readOnly","onChange","onClick","NavBar","Navbar_default","bg","variant","lib","to","Brand","Nav_default","NavItem_default","Button_default","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","components_NavBar_NavBar","Switch","Route","exact","path","component","Redirect","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53afc062.chunk.js","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport './Home.css'\n\nconst Home = props => {\n\treturn (\n\t\t<Jumbotron>\n\t\t\t<h1>Welcome to TeachMe</h1>\n\t\t\t<p>Teach Me is a software project designed to connect users to teach each other creative skills. Teach Me provides creatively skilled individuals (musicians, artists etc.) with an additional source of income, while allowing non-skilled individuals to explore skills that they might be interested in learning.</p>\n\t\t\t<hr />\n\t\t\t<p className=\"bold-text\">This website is still under consturction. Please come back later :)</p>\n\t\t</Jumbotron>\n\t);\n};\n\nexport default Home;","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport './NoMatch.css'\n\nconst NoMatch = props => {\n\treturn (\n\t\t<Jumbotron>\n\t\t\t<h1>Oops</h1>\n\t\t\t<p>That's a 404 error - It seems that we cannot find the page you requested.</p>\n\t\t</Jumbotron>\n\t);\n};\n\nexport default NoMatch;","//https://www.robinwieruch.de/react-fetching-data/\nimport React, { Component } from 'react';\n\nimport './Classes.css'\n\nclass Classes extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tclassListing: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('/api/classes')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({classListing: data}))\t\n\t}\n\n\trender() {\n\t\tconst classListData = this.state.classListing.map(function(data, index) {\n\t\t\treturn <li>{data.instructor} is teaching {data.name} for ${data.price}</li> \n\t\t});\n\n\t\treturn (\n\t\t\t<div className='class-listing'>\n\t\t\t\t<h3>Sample Class Listing (for testing MongoDB integration purposes only)</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{classListData}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Classes;","//https://www.robinwieruch.de/react-fetching-data/\nimport React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport './CreateClass.css'\n\n\nconst CreateClass = props => {\n\treturn (\n\t<div id='create-form'>\n     <h3>Create a Class</h3>\n     <form method=\"post\" action=\"/create-class\">\n\t <label>Name</label><br />\n\t <input type=\"text\" name=\"name\" required /><br />\n\t <label>Description</label><br />\n\t <input type=\"text\" name=\"description\" required /><br />\n\t <label>Price</label><br />\n\t <input type=\"number\" name=\"price\" required /><br />\n\t <label>Proposed Schedule</label><br />\n\t <input type=\"text\" name=\"proposedSchedule\" required /><br />\n\t <input type=\"submit\" value=\"Publish\" />\n\t <a href=\"#\">\n\t   <input type=\"button\" value=\"Cancel\" />\n\t </a>\n     </form>\n    </div>\n\t);\n};\n\nexport default CreateClass;","//https://www.robinwieruch.de/react-fetching-data/\nimport React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\nimport './MyAccount.css'\n\nclass MyAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      IsReadOnly: true,\n      imageIsReadOnly: true,\n      value: 'roger'\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditClick = this.handleEditClick.bind(this);\n  }\n  handleChange(event) {\n    this.setState({value:event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A new profile is submitted! ');\n    event.preventDefault();\n  }\n\n  handleEditClick(event) {\n    this.setState({IsReadOnly:false});\n  }\n\n  render() {\n    return (\n      <div className='myaccount-page'>\n        <h3>My Account Page</h3><br />\n\n        <form onSubmit={this.handleSubmit}>\n        <label>Name</label>\n        <input type = \"text\" name = \"name\" value = {this.state.value} readOnly={this.state.IsReadOnly}\n        onChange = {this.handleChange} required/>\n        <input type = \"button\" name = \"editname\" value = \"Edit\" onClick={this.handleEditClick} /><br />\n        <label>Email</label>\n        <input type = \"text\" name = \"email\" value = \"roger@gmail.com\" readOnly={this.state.IsReadOnly}\n        onChange = {this.handleChange} required/>\n        <input type = \"button\" name = \"editemail\" value = \"Edit\" onClick={this.handleEditClick}/><br />\n        <input type = \"submit\" value = \"Submit\"/>\n        </form>\n\n        <input type = \"button\" name = \"viewclasshistory\" value = \"View Class History\"/>\n\n\n      </div>\n    );\n  }\n\n\n}\n\n\nexport default MyAccount;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavItem from 'react-bootstrap/NavItem'\nimport Button from 'react-bootstrap/Button'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport './NavBar.css'\n\nconst NavBar = () => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n\t\t<LinkContainer to=\"/home\"><Navbar.Brand>TeachMe</Navbar.Brand></LinkContainer>\n\t\t<Nav className=\"mr-auto\">\n\t\t\t<LinkContainer to=\"/home\"><NavItem className=\"nav-link\">Home</NavItem></LinkContainer>\n\t\t\t<LinkContainer to=\"/classes\"><NavItem className=\"nav-link\">Class Listing</NavItem></LinkContainer>\n\t\t\t<LinkContainer to=\"/teach-others\"><NavItem className=\"nav-link\">Teach Others</NavItem></LinkContainer>\n\t\t\t<LinkContainer to=\"/about\"><NavItem className=\"nav-link\">About</NavItem></LinkContainer>\n\t\t</Nav>\n\t\t<Nav>\n\t\t\t<LinkContainer to=\"/log-in\"><Button variant=\"outline-light\">Log In</Button></LinkContainer>\n\t\t\t<LinkContainer to=\"/register\"><Button variant=\"outline-light\">Sign Up</Button></LinkContainer>\n\t\t</Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar; \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Routes } from './routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <Routes />\n    </Router>, \n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//https://github.com/evedes/ReactRouter_Boilerplate_01\n\nimport React from 'react';\nimport { Home } from './views/Home';\nimport { NoMatch } from './views/NoMatch';\nimport { Classes } from './views/Classes'\nimport { CreateClass } from './views/CreateClass'\nimport { MyAccount } from './views/MyAccount'\nimport { NavBar } from './components/NavBar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nexport const Routes = () => {\n\treturn (\n\t\t<div>\n\t\t\t<NavBar />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/home\" component={Home} />\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/classes\" component={Classes} />\n\t\t\t\t<Route exact path=\"/create-class\" component={CreateClass} />\n\t\t\t\t<Route exact path=\"/myaccount\" component={MyAccount} />\n\t\t\t\t<Route component={NoMatch} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n"],"sourceRoot":""}